(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[950],{85950:function(t,e,s){"use strict";const i=s(78630);t.exports=class{constructor(t){this.web3=t,this.checkedBlocks={},this.savedBlocks={},this.requests=0}async getBlockTime(){let t=await this.getBlockWrapper("latest"),e=await this.getBlockWrapper(1);this.blockTime=(parseInt(t.timestamp,10)-parseInt(e.timestamp,10))/(parseInt(t.number,10)-1),this.firstTimestamp=i.unix(e.timestamp)}async getDate(t,e=!0){if(i.isMoment(t)||(t=i(t).utc()),"undefined"!=typeof this.firstTimestamp&&"undefined"!=this.blockTime||await this.getBlockTime(),t.isBefore(this.firstTimestamp))return{date:t.format(),block:1};if(t.isSameOrAfter(this.savedBlocks.latest))return{date:t.format(),block:await this.web3.eth.getBlockNumber()};this.checkedBlocks[t.unix()]=[];let s=await this.getBlockWrapper(Math.ceil(t.diff(this.firstTimestamp,"seconds")/this.blockTime));return{date:t.format(),block:await this.findBetter(t,s,e)}}async getEvery(t,e,s,a=1,r=!0){e=i(e),s=i(s);let c=e,n=[];for(;c.isSameOrBefore(s);)n.push(c.format()),c.add(a,t);return"undefined"!=typeof this.firstTimestamp&&"undefined"!=this.blockTime||await this.getBlockTime(),await Promise.all(n.map((t=>this.getDate(t,r))))}async findBetter(t,e,s,a=this.blockTime){if(await this.isBetterBlock(t,e,s))return e.number;let r=t.diff(i.unix(e.timestamp),"seconds"),c=Math.ceil(r/a);0==c&&(c=r<0?-1:1);let n=await this.getBlockWrapper(this.getNextBlock(t,e.number,c));return a=Math.abs((parseInt(e.timestamp,10)-parseInt(n.timestamp,10))/(parseInt(e.number,10)-parseInt(n.number,10))),this.findBetter(t,n,s,a)}async isBetterBlock(t,e,s){let a=i.unix(e.timestamp);if(s){if(a.isBefore(t))return!1;let s=await this.getBlockWrapper(e.number-1);if(a.isSameOrAfter(t)&&i.unix(s.timestamp).isBefore(t))return!0}else{if(a.isSameOrAfter(t))return!1;let s=await this.getBlockWrapper(e.number+1);if(a.isBefore(t)&&i.unix(s.timestamp).isSameOrAfter(t))return!0}return!1}getNextBlock(t,e,s){let i=e+s;return this.checkedBlocks[t.unix()].includes(i)?this.getNextBlock(t,e,s<0?++s:--s):(this.checkedBlocks[t.unix()].push(i),i)}async getBlockWrapper(t){if(this.savedBlocks[t])return this.savedBlocks[t];let{timestamp:e}=await this.web3.eth.getBlock(t);return this.savedBlocks[t]={timestamp:e,number:"latest"==t?await this.web3.eth.getBlockNumber():t},this.requests++,this.savedBlocks[t]}}}}]);